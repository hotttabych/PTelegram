name: Create Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest # [self-hosted, ptg]
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: 3.1.5
          release_name: 3.1.5
          body: |
            Bug fixes.
          draft: false
          prerelease: true
      - uses: actions/checkout@v2
      - name: Replace passwords
        run: RELEASE_KEY_PASSWORD=$(printf '%s\n' "$RELEASE_KEY_PASSWORD" | sed -e 's/[\/&]/\\&/g') && sed -i "s/UCKJJtMyqB\!9uGrAw6xu/$RELEASE_KEY_PASSWORD/g" gradle.properties && RELEASE_STORE_PASSWORD=$(printf '%s\n' "$RELEASE_STORE_PASSWORD" | sed -e 's/[\/&]/\\&/g') && sed -i "s/LdAaKx_MFWGzL4ix4Jj\*/$RELEASE_STORE_PASSWORD/g" gradle.properties && sed -i "s/key0/keyPtg/g" gradle.properties
        env:
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
          RELEASE_STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}
      - name: Build docker image
        run: docker build -t telegram-build .
      - name: Build app
        run: docker run --rm -v "$PWD":/home/source telegram-build #--cpus="3.5" -m 6000M telegram-build
      - name: Print Hash
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: sha256sum TMessagesProj/build/outputs/apk/afat/standalone/app.apk
      - name: Upload APK
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: TMessagesProj/build/outputs/apk/afat/standalone/app.apk
          asset_name: PTelegram.apk
          asset_content_type: application/vnd.android.package-archive
      - name: Create cleanup request
        run: touch delete_request
