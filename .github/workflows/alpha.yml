name: Create Alpha

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest # [self-hosted, ptg]
    steps:
      - uses: actions/checkout@v2
      - name: Replace passwords
        run: RELEASE_KEY_PASSWORD=$(printf '%s\n' "$RELEASE_KEY_PASSWORD" | sed -e 's/[\/&]/\\&/g') && sed -i "s/UCKJJtMyqB\!9uGrAw6xu/$RELEASE_KEY_PASSWORD/g" gradle.properties && RELEASE_STORE_PASSWORD=$(printf '%s\n' "$RELEASE_STORE_PASSWORD" | sed -e 's/[\/&]/\\&/g') && sed -i "s/LdAaKx_MFWGzL4ix4Jj\*/$RELEASE_STORE_PASSWORD/g" gradle.properties && sed -i "s/key0/keyPtg/g" gradle.properties
        env:
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
          RELEASE_STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}
      - name: Build docker image
        run: docker build -f Dockerfile -t telegram-build .
      - name: Build app
        run: docker run --rm -v "$PWD":/home/source telegram-build #--cpus="3.5" -m 6000M telegram-build
      - name: Print Hash
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: sha256sum TMessagesProj/build/outputs/apk/afat/standalone/app.apk
      - name: Save artifact
        uses: actions/upload-artifact@master
        with:
          name: PTelegram-v3_0_1a.apk
          path: TMessagesProj/build/outputs/apk/afat/standalone/app.apk
      - name: Create cleanup request
        run: touch delete_request
